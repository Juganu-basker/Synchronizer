name: ci

on:
  push:
    branches: [ main ]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: create env file from secrets
        run: |
          echo "LMS_API_PASSWORD=${{ secrets.LMS_API_PASSWORD }}" >> .env
          echo "FIREBASE_TYPE=${{ secrets.FIREBASE_TYPE }}" >> .env
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
          echo "FIREBASE_PRIVATE_KEY_ID=${{ secrets.FIREBASE_PRIVATE_KEY_ID }}" >> .env
          echo "FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }}" >> .env
          echo "FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }}" >> .env
          echo "FIREBASE_CLIENT_ID=${{ secrets.FIREBASE_CLIENT_ID }}" >> .env
          echo "FIREBASE_AUTH_URI=${{ secrets.FIREBASE_AUTH_URI }}" >> .env
          echo "FIREBASE_TOKEN_URI=${{ secrets.FIREBASE_TOKEN_URI }}" >> .env
          echo "FIREBASE_AUTH_PROVIDER_X509_CERT_URL=${{ secrets.FIREBASE_AUTH_PROVIDER_X509_CERT_URL }}" >> .env
          echo "FIREBASE_UNIVERSE_DOMAIN=${{ secrets.FIREBASE_UNIVERSE_DOMAIN }}" >> .env
          echo "GIS_CLOUD_API_KEY=${{ secrets.GIS_CLOUD_API_KEY }}" >> .env
          echo "GIS_CLOUD_LAYER_ID=${{ secrets.GIS_CLOUD_LAYER_ID }}" >> .env
          echo "MONDAY_API_KEY=${{ secrets.MONDAY_API_KEY }}" >> .env
          echo "MONDAY_BOARD_ID=${{ secrets.MONDAY_BOARD_ID }}" >> .env
          echo "MONDAY_GROUP_ID=${{ secrets.MONDAY_GROUP_ID }}" >> .env
          echo "LMS_API_BASEURL=${{ secrets.LMS_API_BASEURL }}" >> .env
          echo "LMS_API_USERNAME=${{ secrets.LMS_API_USERNAME }}" >> .env
          echo "DB_HOST=${{secrets.DB_HOST}}" >> .env 
          echo "DB_USER=${{secrets.DB_USER}}" >> .env
          echo "DB_PASSWORD=${{secrets.DB_PASSWORD}}" >> .env
          echo "DB_NAME=${{secrets.DB_NAME}}" >> .env

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: orbasker/synchronizer:latest